import{at as f,m as h,ao as P,o as u,c as g,b as w,k as p,C as y}from"./index-6468ddc9.js";const x=new TextDecoder;let v=x.decode(new Uint8Array([99,108,97,115,115,32,77,121,80,114,111,109,105,115,101,32,123,10,32,32,115,116,97,116,105,99,32,97,115,121,110,99,32,97,108,108,40,97,114,114,41,32,123,10,32,32,32,32,108,101,116,32,105,110,100,101,120,32,61,32,48,10,32,32,32,32,99,111,110,115,116,32,114,101,115,65,114,114,32,61,32,91,93,10,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,10,32,32,32,32,32,32,105,102,32,40,33,65,114,114,97,121,46,105,115,65,114,114,97,121,40,97,114,114,41,41,32,114,101,116,117,114,110,32,114,101,106,101,99,116,40,110,101,119,32,69,114,114,111,114,40,39,233,156,128,232,166,129,228,188,160,229,133,165,230,149,176,231,187,132,39,41,41,10,32,32,32,32,32,32,105,102,32,40,97,114,114,46,108,101,110,103,116,104,32,61,61,61,32,48,41,32,114,101,116,117,114,110,32,114,101,115,111,108,118,101,40,91,93,41,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,105,100,120,32,105,110,32,97,114,114,41,32,123,10,32,32,32,32,32,32,32,32,99,111,110,115,116,32,99,117,114,32,61,32,97,114,114,91,105,100,120,93,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,99,117,114,32,105,110,115,116,97,110,99,101,111,102,32,80,114,111,109,105,115,101,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,115,65,114,114,91,105,100,120,93,32,61,32,99,117,114,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,43,43,105,110,100,101,120,32,61,61,61,32,97,114,114,46,108,101,110,103,116,104,41,32,114,101,115,111,108,118,101,40,114,101,115,65,114,114,41,10,32,32,32,32,32,32,32,32,32,32,99,111,110,116,105,110,117,101,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,99,117,114,46,116,104,101,110,40,40,114,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,115,65,114,114,91,105,100,120,93,32,61,32,114,101,115,10,32,32,32,32,32,32,32,32,32,32,105,102,32,40,43,43,105,110,100,101,120,32,61,61,61,32,97,114,114,46,108,101,110,103,116,104,41,32,114,101,115,111,108,118,101,40,114,101,115,65,114,114,41,10,32,32,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,101,114,114,41,10,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,125,10,32,32,32,32,125,41,10,32,32,125,10,10,32,32,115,116,97,116,105,99,32,114,97,99,101,40,97,114,114,41,32,123,10,32,32,32,32,105,102,32,40,33,65,114,114,97,121,46,105,115,65,114,114,97,121,40,97,114,114,41,41,32,114,101,116,117,114,110,32,117,110,100,101,102,105,110,101,100,10,10,32,32,32,32,114,101,116,117,114,110,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,10,32,32,32,32,32,32,102,111,114,32,40,99,111,110,115,116,32,105,100,120,32,105,110,32,97,114,114,41,32,123,10,32,32,32,32,32,32,32,32,108,101,116,32,99,117,114,32,61,32,97,114,114,91,105,100,120,93,10,32,32,32,32,32,32,32,32,105,102,32,40,33,40,99,117,114,32,105,110,115,116,97,110,99,101,111,102,32,80,114,111,109,105,115,101,41,41,32,123,10,32,32,32,32,32,32,32,32,32,32,99,117,114,32,61,32,80,114,111,109,105,115,101,46,114,101,115,111,108,118,101,40,99,117,114,41,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,99,117,114,46,116,104,101,110,40,40,114,101,115,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,115,111,108,118,101,40,114,101,115,41,10,32,32,32,32,32,32,32,32,125,41,46,99,97,116,99,104,40,40,101,114,114,41,32,61,62,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,106,101,99,116,40,101,114,114,41,10,32,32,32,32,32,32,32,32,125,41,10,32,32,32,32,32,32,125,10,32,32,32,32,125,41,10,32,32,125,10,125,10,99,111,110,115,116,32,112,48,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,41,32,61,62,32,123,10,32,32,114,101,115,111,108,118,101,40,39,114,101,115,111,108,118,101,39,41,10,125,41,10,10,99,111,110,115,116,32,112,49,32,61,32,49,10,10,99,111,110,115,116,32,112,50,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,41,32,61,62,32,123,10,32,32,115,101,116,84,105,109,101,111,117,116,40,40,41,32,61,62,32,123,10,32,32,32,32,114,101,115,111,108,118,101,40,39,114,101,115,111,108,118,101,39,41,10,32,32,125,44,32,49,48,48,48,41,10,125,41,10,10,99,111,110,115,116,32,112,51,32,61,32,110,101,119,32,80,114,111,109,105,115,101,40,40,114,101,115,111,108,118,101,44,32,114,101,106,101,99,116,41,32,61,62,32,123,10,32,32,114,101,106,101,99,116,40,39,114,101,106,101,99,116,39,41,10,125,41,10,47,47,32,99,111,110,115,116,32,112,51,32,61,32,49,10,10,97,115,121,110,99,32,102,117,110,99,116,105,111,110,32,116,101,115,116,40,41,32,123,10,32,32,47,47,32,99,111,110,115,116,32,97,108,108,49,32,61,32,97,119,97,105,116,32,80,114,111,109,105,115,101,46,97,108,108,40,91,112,48,44,32,112,49,44,32,112,50,44,32,112,51,93,41,10,47,47,32,99,111,110,115,116,32,97,108,108,50,32,61,32,97,119,97,105,116,32,77,121,80,114,111,109,105,115,101,46,97,108,108,40,91,112,48,44,32,112,49,44,32,112,50,44,32,112,51,93,41,10,47,47,32,99,111,110,115,111,108,101,46,108,111,103,40,97,108,108,49,44,32,97,108,108,50,41,10,10,32,32,99,111,110,115,116,32,114,97,99,101,49,32,61,32,97,119,97,105,116,32,80,114,111,109,105,115,101,46,114,97,99,101,40,91,112,48,44,32,112,49,44,32,112,50,44,32,112,51,93,41,10,32,32,99,111,110,115,116,32,114,97,99,101,50,32,61,32,97,119,97,105,116,32,77,121,80,114,111,109,105,115,101,46,114,97,99,101,40,91,112,48,44,32,112,49,44,32,112,50,44,32,112,51,93,41,10,32,32,99,111,110,115,111,108,101,46,108,111,103,40,114,97,99,101,49,44,32,114,97,99,101,50,41,10,125,10,116,101,115,116,40,41,10,10,101,120,112,111,114,116,32,123,32,112,48,44,32,112,49,44,32,112,50,44,32,112,51,44,32,77,121,80,114,111,109,105,115,101,32,125,10]));class A{static async all(e){let c=0;const t=[];return new Promise((r,s)=>{if(!Array.isArray(e))return s(new Error("需要传入数组"));if(e.length===0)return r([]);for(const o in e){const a=e[o];if(!(a instanceof Promise)){t[o]=a,++c===e.length&&r(t);continue}a.then(i=>{t[o]=i,++c===e.length&&r(t)}).catch(i=>{s(i)})}})}static race(e){if(Array.isArray(e))return new Promise((c,t)=>{for(const r in e){let s=e[r];s instanceof Promise||(s=Promise.resolve(s)),s.then(o=>{c(o)}).catch(o=>{t(o)})}})}}const _=new Promise(n=>{n("resolve")}),d=1,l=new Promise(n=>{setTimeout(()=>{n("resolve")},1e3)}),m=new Promise((n,e)=>{e("reject")});async function k(){const n=await Promise.race([_,d,l,m]),e=await A.race([_,d,l,m]);console.log(n,e)}k();const j={class:"wrapper"},B={__name:"index",setup(n){return h(async()=>{await Promise.race([_,d,l,m])}),(e,c)=>{const t=P("highlightjs");return u(),g("div",j,[w(t,{style:{margin:"0"},language:"js",code:p(v)},null,8,["code"])])}}},C=f(B,[["__scopeId","data-v-d9a840d8"]]),M={__name:"Promise",setup(n){return(e,c)=>(u(),y(p(C)))}};export{M as default};
